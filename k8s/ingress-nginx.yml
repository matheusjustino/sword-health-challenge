apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-rabbitmq
  namespace: argocd
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  ingressClassName: nginx
  rules:
    - host: rabbitmq-sword-health.159.203.157.189.nip.io
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: rabbitmq
                port:
                  name: http
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-argocd
  namespace: argocd
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    cert-manager.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
spec:
  rules:
    - host: argocd-sword-health.159.203.157.189.nip.io
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: argocd-server
                port:
                  name: https
  tls:
    - hosts:
        - argocd-sword-health.159.203.157.189.nip.io
      secretName: argocd-secret
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress-users-api
  namespace: argocd
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  ingressClassName: nginx
  rules:
    - host: users-api-sword-health.159.203.157.189.nip.io
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: users-app-service
                port:
                  number: 8080
